// Clear fix
@mixin clearfix {
  &:before,
  &:after {
    content: "";
    display: table;
    line-height: 0;
  }

  &:after {
    clear: both;
  }
}

@mixin hide-text {
  font: 0/0 a;
  text-shadow: none;
  color: transparent;
}

// Mixin to HW accelerate
// How to use it:
// @include accelerate(transform);

@mixin accelerate($name) {
  backface-visibility: hidden;
  perspective: 1000px;
  transform: translateZ(0);
  will-change: $name;
}

@mixin absolute-cover {
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
}

@mixin set-width($w, $max: $w) {
  width: $w !important;
  max-width: $max !important;
}

/*
  none - Phone
  ps - Phablet
  ts - Tablet
  ms - Minidesktop
  bs - Big screen size
*/

@mixin mq-generation($name) {
  .u-#{$name} {
    @content;
  }

  @include min-screen($phone-breakpoint) {
    .u-#{$name}-ps {
      @content;
    }
  }

  @include min-screen($phablet-breakpoint) {
    .u-#{$name}-ts {
      @content;
    }
  }

  @include min-screen($tablet-breakpoint) {
    .u-#{$name}-ms {
      @content;
    }
  }

  @include min-screen($mini-desktop-breakpoint) {
    .u-#{$name}-ds {
      @content;
    }
  }

  @include min-screen($big-screens-breakpoint) {
    .u-#{$name}-bs {
      @content;
    }
  }
}

// Text overflow
// Requires inline-block or block for proper styling

@mixin text-overflow {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin font-size($sizeValue: 16) {
  font-size: $sizeValue + px;
  font-size: ($sizeValue / 10) + rem;
}

@mixin line-height($line) {
  line-height: $line  + px;
  line-height: ($line / 10) + rem;
}

// SVG background images with PNG and retina fallback
// Usage: @include background-image('pattern');

$image-path: "/assets" !default;
$fallback-extension: "png" !default;
$retina-suffix: "@2x";

@mixin background-image($name, $size:false) {
  background-image: url(#{$image-path}/#{$name}.svg);
  @if($size) {
    background-size: $size;
  }

  .no-svg & {
    background-image: url(#{$image-path}/#{$name}.#{$fallback-extension});

    @media only screen and (-moz-min-device-pixel-ratio: 1.5), only screen and (-o-min-device-pixel-ratio: 3/2), only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min-device-pixel-ratio: 1.5) {
      background-image: url(#{$image-path}/#{$name}#{$retina-suffix}.#{$fallback-extension});
    }
  }
}

/* Responsive mixin
   ----------------
  @include min-screen(320) {
    width: 300px;
  }
*/

//base font
//$bf: 16;
$bf: 1;

@mixin screen($res-first, $res-last: $res-first) {
  @if $res-first == $res-last {
    @media (max-width: #{$res-first/$bf}px) {
      @content;
    }
  } @else if $res-first < $res-last {
    @media (min-width: #{$res-first/$bf}px) and (max-width: #{$res-last/$bf}px) {
      @content;
    }
  }
}

@mixin min-screen($bp) {
  $em: $bp/$bf;
  @media(min-width: #{$em}px) {
    @content;
  }
}

@mixin max-screen($bp) {
  $em: $bp/$bf;
  @media(max-width: #{$em}px) {
    @content;
  }
}
